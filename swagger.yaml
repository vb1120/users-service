openapi: 3.0.0
info:
  title: "Note App Users Service"
  description: "API Documentation for users service"
  version: "1.0.0"

servers:
  - url: http://localhost:8080/
    description: Local Development Server
    
components:
  securitySchemes:
    bearerAccess:
      type: http
      scheme: bearer
      bearerFormat: JWT
    bearerRefresh:
      type: http
      scheme: bearer
      bearerFormat: JWT
      
  schemas:
    User:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: '123e4567-e89b-12d3-a456-426614174000'
          description: Auto generated on the server
        email:
          type: string
          format: email
          example: 'test@example.com'
        password:
          type: string
          format: password
          example: 'test123'
        name:
          type: string
        createdAt:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28Z'
          description: Auto generated on the server
        updatedAt:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28Z'
          description: Auto generated on the server
      required:
        - uuid
        - email
        - password

    Tokens:
          type: object
          properties:
            accessToken:
              type: string
              example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'
            refreshToken:
              type: string
              example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'

    Unauthorized:
      type: object
      properties:
        message:
          type: string
          description: Unauthorization Message
          example: 'Unauthorized'
          
    NotFound:
      type: object
      properties:
        message:
          type: string
          description: Entity Not Found 
          example: 'Entity Not Found'
          
    BadRequest:
      type: object
      properties:
        message:
          type: string
          description: Bad Request Object
          example: 'Malformed Request'
    
    ServerError:
      type: object
      properties:
        message:
          type: string
          description: Internal Server Error
          example: 'Internal Server Error'
          
tags:
  - name: Auth
    description: API endpoints for authorizing and authenticating the user
  - name: Users
    description: API endpoints for managing users

  
paths:        
  /signup:
    post:
      description: Registers a new user
      tags: [Auth]
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/User'
      responses:
        201:
          description: User created succesfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tokens'
        400:
          description: User already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /login:
    post:
      description: Logs in the User
      tags: [Auth]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: User sucessfully logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tokens'
        400:
          description: Validation fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
                
  /token:
    post:
      description: Returns new access token
      tags: [Auth]
      security:
        - bearerRefresh: []
      responses:
        200:
          description: Access token returned successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        404:
          description: User Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
                
  /logout:
    post:
      description: Logs out the user from the app
      tags: [Auth]
      security:
        - bearerAccess: []
      responses:
        200:
            description: User successfully logged out
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: 'User successfully logged out'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        404:
          description: User Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'  
                
  /users:
    get:
      description: Returns the list of users
      tags: [Users]
      security:
        - bearerAccess: []
      responses:
        200:
          description: Users returned sucessfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
    post:
      description: Creates the new user
      tags: [Users]
      security: 
        - bearerAccess: []
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        201:
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        400:
          description: User already exists or validation fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  
  /users/{userUuid}:
    get:
      description: Returns the user by uuid
      tags: [Users]
      security: 
        - bearerAccess: []
      parameters:
        - in: path
          name: userUuid
          schema:
            type: string
            format: uuid
          required: true
          description: The universal unique identifier of the user
      responses:
        200:
          description: User returned succesfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        404:
          description: User Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'        
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
      
    put:
      description: Updates the user
      tags: [Users]
      security: 
        - bearerAccess: []
      parameters:
        - in: path
          name: userUuid
          schema:
            type: string
            format: uuid
          required: true
          description: The universal unique identifier of the user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        204:
          description: User updated successfully
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        404:
          description: User Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'   
        400:
          description: Validation fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
                
    delete:
      description: Deletes the user
      tags: [Users]
      security: 
        - bearerAccess: []
      parameters:
        - in: path
          name: userUuid
          schema:
            type: string
            format: uuid
          required: true
          description: The universal unique identifier of the user
      responses:
        204:
          description: User deleted successfully
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        404:
          description: User Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'     
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
                
